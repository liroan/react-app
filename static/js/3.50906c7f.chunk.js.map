{"version":3,"sources":["Component/Profile/MyPost/Post/Post.js","Component/Profile/MyPost/ProfilePostForm/ProfilePostForm.js","Component/Profile/MyPost/MyPost.js","Component/Profile/MyPost/MyPostContainer.js","Component/Profile/ProfileInfo/Contacts.js","Component/Profile/ProfileInfo/ProfileInfoStatus/ProfileInfoStatus.js","Component/Profile/ProfileInfo/ProfileInfo.js","Component/Profile/Profile.js","Component/Profile/ProfileContainer.js"],"names":["Post","props","className","src","alt","message","count","maxlength5","maxlength","reduxForm","form","onSubmit","handleSubmit","Field","component","TextareaContainer","name","validate","requiredField","MyPost","React","memo","PostsData","PostData","map","mes","key","id","messagescount","console","log","profilePostFormData","addPost","profilePostText","MyPostContainer","connect","state","profilePage","newPostText","Contacts","refSocNetw","nameSocNetw","href","ProfileInfoStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateProfileStatusThunkCreator","onChangeStatus","e","currentTarget","value","a","b","this","onBlur","autoFocus","type","onChange","onClick","Component","ProfileInfo","contacts","socialNetworks","contact","puthNetwork","undefined","ProfileData","photos","large","userPhotoDefault","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","ProfileContainer","setUser","setProfileStatusThunkCreator","getProfileUserThunkCreation","userId","match","params","Myid","history","push","prevProps","prevState","snapshot","isFetching","compose","auth","setContact","setStatus","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.50906c7f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Post.css'\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className=\"one__post\">\r\n\t\t\t<div className=\"comment_ava\">\r\n\t\t\t    <div className=\"\"><img src=\"https://avatars.mds.yandex.net/get-pdb/1527906/93eb12de-d5e1-4f58-bed9-de20d57bb736/s1200?webp=false\" alt=\"\"/></div>\r\n\t\t\t    <p>{props.message}</p>\r\n\t\t\t</div>\r\n\t\t    <p>Like: <span>{props.count}</span></p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {TextareaContainer} from \"../../../Common/TextareaContainer/TextareaContainer\";\r\nimport {maxlength, requiredField} from \"../../../../validation/validationForm\";\r\n\r\nlet maxlength5 = maxlength(5)\r\n\r\nconst ProfilePostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextareaContainer} name='profilePostText' validate={[requiredField, maxlength5]}/>\r\n            <button>SEND</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default reduxForm({form: 'profilePostForm'})(ProfilePostForm);\r\n","import React from 'react';\r\nimport './MyPost.css'\r\nimport Post from './Post/Post.js'\r\nimport ProfileForm from \"./ProfilePostForm/ProfilePostForm\";\r\n\r\n\r\n\r\nconst MyPost = React.memo((props) => {\r\n\r\n\tlet PostsData = props.PostData.map(mes => <Post message={mes.message} key={mes.id} messagescount={mes.count}/>);\r\n\r\n\tconst onSubmit = (profilePostFormData) => {\r\n\t\tprops.addPost(profilePostFormData.profilePostText);\r\n\t};\r\n\tconsole.log('RENDER');\r\n\treturn (\r\n\t\t<div className=\"block__posts\">\r\n\t\t    <p>My post</p>\r\n\t\t    <ProfileForm onSubmit={onSubmit}/>\r\n\t\t    <div className=\"posts\">\r\n\t\t        {PostsData}\r\n\t\t    </div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport {addPost} from '../../../Redux/profileReducer.js' //импорт функции\r\nimport MyPost from './MyPost.js'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tPostData: state.profilePage.PostData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n};\r\n\r\n\r\nlet MyPostContainer = connect(mapStateToProps, {addPost})(MyPost);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\n\r\n\r\nconst Contacts = (props) => {\r\n    return (\r\n        <>\r\n            <div>{props.refSocNetw != null ?\r\n                <p>{props.nameSocNetw}: <a href={props.refSocNetw}>{props.refSocNetw}</a></p> : null}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Contacts","import React, {useEffect, useState} from \"react\";\r\nimport Prealoder from \"../../../Common/Preloader/Preloader\";\r\n\r\n\r\n\r\n/*const ProfileInfoStatus = (props) =>  {\r\n\r\n    let [editMode, toggleEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const deactivateEditMode = () => {\r\n        toggleEditMode(false);\r\n        props.updateProfileStatusThunkCreator(status)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <p onClick={() => toggleEditMode(true)}>{props.status}</p> :\r\n                <input onBlur={deactivateEditMode}\r\n                       autoFocus={true}\r\n                       type=\"text\" value={status}\r\n                       onChange={(e) => setStatus(e.target.value)}/>\r\n            }\r\n        </div>\r\n    )\r\n};*/\r\n\r\nclass ProfileInfoStatus extends React.Component  {\r\n\r\n\r\n        state = {\r\n            editMode: false,\r\n            status: this.props.status\r\n        }\r\n\r\n\r\n        componentDidUpdate(a, b) {\r\n            if (a.status !== this.props.status) {\r\n                this.setState({\r\n                    status: this.props.status\r\n                });\r\n            }\r\n        }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateProfileStatusThunkCreator(this.state.status)\r\n    };\r\n\r\n    onChangeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ?\r\n                    <p onClick={this.activateEditMode}>{this.props.status}</p> :\r\n                    <input onBlur={this.deactivateEditMode}\r\n                           autoFocus={true}\r\n                           type=\"text\" value={this.state.status}\r\n                           onChange={this.onChangeStatus}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default ProfileInfoStatus;","import React from \"react\";\r\nimport './ProfileInfo.css'\r\nimport Contacts from \"./Contacts\";\r\nimport userPhotoDefault from './../../../Assets/userPhotoDefault.png'\r\nimport ProfileInfoStatus from \"./ProfileInfoStatus/ProfileInfoStatus\";\r\nimport Prealoder from \"../../Common/Preloader/Preloader\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\tlet contacts = props.socialNetworks.map(contact => <Contacts nameSocNetw={contact.name} refSocNetw={contact.puthNetwork}/>);\r\n\treturn (\r\n\t\t<div className=\"ProfileInfo\">\r\n\t\t\t<div className=\"about-profile__ProfileInfo\">\r\n\t\t\t\t<div className=\"img__about-profile\">\r\n\t\t\t\t\t{props.ProfileData.photos !== undefined ?\r\n\t\t\t\t\t\t<img src={props.ProfileData.photos.large !== null ? props.ProfileData.photos.large : userPhotoDefault} alt=\"\"/> : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"name__about-profile\">\r\n\t\t\t\t\t<p>Полное имя: <span className=\"orangeInfo\">{props.ProfileData.fullName}</span></p>\r\n\t\t\t\t\t<p>Обо мне: <span className=\"orangeInfo\">{props.ProfileData.aboutMe}</span></p>\r\n\t\t\t\t\t<p>Работа: <span className=\"orangeInfo\">{props.ProfileData.lookingForAJob ? props.ProfileData.lookingForAJobDescription : 'Не скажу :)'}</span></p>\r\n\t\t\t\t\t<ProfileInfoStatus status={props.status}\r\n\t\t\t\t\t\t\t\t\t   updateProfileStatusThunkCreator={props.updateProfileStatusThunkCreator}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"contacts__about-profile\">\r\n\t\t\t\t\t{contacts}\r\n\t\t\t\t</div>\r\n\t\t \t</div>\r\n\t \t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport './Profile.css'\r\nimport MyPostContainer from './MyPost/MyPostContainer.js'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.js'\r\nimport {Redirect} from \"react-router-dom\";\r\nconst Profile = (props) => {\r\n\tconsole.log(\"hhee11\")\r\n\treturn (\r\n\t\t<section className=\"Profile\">\r\n\t\t    <ProfileInfo socialNetworks={props.socialNetworks}\r\n\t\t\t\t\t\t ProfileData={props.ProfileData}\r\n\t\t\t\t\t\t status={props.status}\r\n\t\t\t\t\t\t updateProfileStatusThunkCreator={props.updateProfileStatusThunkCreator}/>\r\n\t\t    <MyPostContainer/>\r\n      \t</section>\r\n\t)\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addPost,\r\n    getProfileStatusThunkCreator,\r\n    getProfileUserThunkCreation, setContact, setProfileStatusThunkCreator, setStatus, setUserProfile,\r\n    updateProfileStatusThunkCreator\r\n} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Prealoder from \"../Common/Preloader/Preloader\";\r\nimport {withRedirect} from \"../../HOC/withRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    setUser = (id) => {\r\n        this.props.setProfileStatusThunkCreator(id)\r\n        this.props.getProfileUserThunkCreation(id);\r\n    };\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.Myid;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.setUser(userId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            if (!this.props.match.params.userId) {\r\n                this.setUser(this.props.Myid)\r\n            }\r\n            if (this.props.match.params.userId) {\r\n                this.setUser(this.props.match.params.userId)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.props.isFetching ? <Prealoder/> : null}\r\n                <Profile ProfileData={this.props.ProfileData}\r\n                         socialNetworks={this.props.socialNetworks}\r\n                         status={this.props.status}\r\n                         updateProfileStatusThunkCreator={this.props.updateProfileStatusThunkCreator}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        ProfileData: state.profilePage.ProfileData,\r\n        socialNetworks: state.profilePage.socialNetworks,\r\n        isFetching: state.profilePage.isFetching,\r\n        status: state.profilePage.status,\r\n        Myid: state.auth.id\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setContact, setStatus, getProfileUserThunkCreation, setProfileStatusThunkCreator, updateProfileStatusThunkCreator, setUserProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}